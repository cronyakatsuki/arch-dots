#!/bin/sh

# determine where to place the log file
logfile="$HOME/.dkrc.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/dkrc.log"
: > "$logfile"


# (re)load sxhkd for keybinds
if hash sxhkd >/dev/null 2>&1; then
	pkill sxhkd
	sxhkd -c "$HOME/.config/dk/sxhkdrc" "$HOME/.config/sxhkd/general" &
fi

{
    # workspace settings
    # ---------------------

    # create 9 workspaces
	dkcmd set numws=9

    # set default workspace for all to be tile
	dkcmd set ws=_ apply layout=tile master=1 stack=0 gap=15 msplit=0.5 ssplit=0.5

	dkcmd set ws=1 layout=mono
	dkcmd set ws=4 layout=mono
	dkcmd set ws=5 layout=mono
	dkcmd set ws=6 layout=none

	# global settings
	# ---------------------

	# focus windows when receiving activation and enable focus-follows-mouse
	dkcmd set focus_open=true focus_urgent=true focus_mouse=true

	# place clients at the tail and ignore size hints on tiled windows
	dkcmd set tile_tohead=0 tile_hints=false

	# minimum width/height for resizing, and minimum allowed on-screen when moving
	dkcmd set win_minwh=50 win_minxy=10

	# disable gaps and borders in single window layouts
	dkcmd set smart_gap=false smart_border=false

	# define mouse mod and move/resize buttons
	dkcmd set mouse mod=super move=button1 resize=button3


	# borders
	# ---------

	# set border width and colour for each window state
	dkcmd set border width=3 colour focus='#939ab7' unfocus='#5b6078' urgent='#ee5555'


	# window rules
	# --------------

	# # focus window and workspace on opening
	dkcmd rule class="^firefox$" ws=1 focus=true
	dkcmd rule class="^badd$" float=true
	dkcmd rule class="^newsboat$" ws=4 focus=true
	dkcmd rule class="^videos$" ws=4 focus=true
	dkcmd rule class="^ytfzf$" ws=4 focus=true
	dkcmd rule class="^lf$" ws=4 focus=true
	dkcmd rule class="^discord$" ws=5 focus=true
	dkcmd rule class="^Ferdium$" ws=5 focus=true
	dkcmd rule class="^thunderbird$" ws=5 focus=true
	dkcmd rule class="^tutanota-desktop$" ws=5 focus=true
	dkcmd rule class="^Lutris$" ws=6 focus=true
	dkcmd rule class="^Steam$" ws=6 focus=true
	dkcmd rule class="^heroic$" ws=6 focus=true

} >> "$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "dkrc has errors" \
		"$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
	exit 1
fi

[ ! -f "$HOME/.cache/dk.lock" ] && $HOME/.config/dk/autorun.sh
touch $HOME/.cache/dk.lock

exit 0
